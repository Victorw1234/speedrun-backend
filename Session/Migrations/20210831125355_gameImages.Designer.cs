// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Session.Model;

namespace Session.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210831125355_gameImages")]
    partial class gameImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Session.Model.CategoryExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("CategoryExtensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            Title = "Easy"
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            Title = "Legendary"
                        });
                });

            modelBuilder.Entity("Session.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Halo 3"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Super Mario 64"
                        });
                });

            modelBuilder.Entity("Session.Model.GameAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GameAdmins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Session.Model.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryExtensionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSet")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RunTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryExtensionId");

                    b.HasIndex("UserId");

                    b.ToTable("Times");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryExtensionId = 1,
                            DateSet = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "https://www.youtube.com/watch?v=uhpuu6B3L8E",
                            RunTime = new DateTime(1, 1, 1, 1, 1, 57, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Session.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte[]>("salt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "apa123",
                            Username = "victorw1234"
                        },
                        new
                        {
                            Id = 2,
                            Password = "apa123",
                            Username = "baneinei"
                        });
                });

            modelBuilder.Entity("Session.Model.CategoryExtension", b =>
                {
                    b.HasOne("Session.Model.Game", "Game")
                        .WithMany("CategoryExtensions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Session.Model.GameAdmin", b =>
                {
                    b.HasOne("Session.Model.Game", "Game")
                        .WithMany("Admins")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Session.Model.User", "User")
                        .WithMany("Admin")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Session.Model.Time", b =>
                {
                    b.HasOne("Session.Model.CategoryExtension", "CategoryExtension")
                        .WithMany("Times")
                        .HasForeignKey("CategoryExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Session.Model.User", "User")
                        .WithMany("Times")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryExtension");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Session.Model.CategoryExtension", b =>
                {
                    b.Navigation("Times");
                });

            modelBuilder.Entity("Session.Model.Game", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("CategoryExtensions");
                });

            modelBuilder.Entity("Session.Model.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Times");
                });
#pragma warning restore 612, 618
        }
    }
}
